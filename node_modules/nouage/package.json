{
  "name": "nouage",
  "version": "0.0.3-beta",
  "description": "Seam data-binding plugin based on Object.observe (es7)",
  "main": "index.js",
  "scripts": {
    "test": "mocha --harmony test/*",
    "watch": "mocha --harmony watch test/*"
  },
  "keywords": [
    "object.observe",
    "data",
    "binding",
    "plugin",
    "seam-view"
  ],
  "author": {
    "name": "Olivier Scherrer"
  },
  "license": "MIT",
  "devDependencies": {
    "seam": "0.0.3",
    "quick-dom": "0.0.2",
    "seam-view": "0.0.1",
    "chai": "~1.10.0"
  },
  "dependencies": {
    "compare-numbers": "0.0.1",
    "get-nodes": "0.0.1",
    "get-dataset": "0.0.1",
    "simple-loop": "0.0.3",
    "nested-property": "0.0.6",
    "to-array": "~0.1.4",
    "observe-plus": "~3.0.3-beta"
  },
  "readme": "#Nouage.js\n\nNouage is a French translation for the word _binding_.\n\nNow that Object.observe starts being available in various JS runtimes, data-binding libraries can be standalone. For years, we have used Backbone-like models that publish events when changes happen, or Angular-like digest loops with dirty-checking.\nThese were necessary complications to achieve data-binding in the browser as JavaScript didn't have any official way to watch for changes in data structures, until Object.obsreve.\nNouage is a library that leverages Object.observe to provide a way to achieve two-way data-binding.\n\nNote that if you're into immutable data structure, this isn't for you ;)\n\n## Status\n\nBeta. The API should be stable.\n\n##Installation\n\nnpm install nouage\n\n##Usage\n\nvar nouage = require('nouage');\n\nMore to come...\n\n##Changelog\n\n###0.0.3-beta - 28 JUNE 2015\n * Fix memleak with data-foreach\n\n###0.0.2-beta - 28 JUNE 2015\n * Fix tests and remove unused code\n\n##License\n\nMIT",
  "readmeFilename": "README.md",
  "gitHead": "cfcc462a9a7d5758161298407112f2adb7f8caa8",
  "_id": "nouage@0.0.3-beta",
  "_shasum": "8120859d3cf2a139ac39f5b350e631e9062f8d3c",
  "_from": "nouage@*"
}
